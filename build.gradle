buildscript
{
    repositories
    {
        maven
        {
            url = 'https://files.minecraftforge.net/maven'
        }

        jcenter()
         mavenCentral()
    }

    dependencies
    {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3+'
    }
}

apply plugin: 'net.minecraftforge.gradle'

repositories
{
    flatDir
    {
        dir 'libs'
    }
}

group = "${modgroup}"
version = "${modversion}"
archivesBaseName = "${modname}-${mcversion}"
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft
{
    mappings channel: 'stable', version: '39-1.12'
    //makeObfSourceJar = false
    //accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs
    {
        client
        {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server
        {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies
{
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    compileOnly 'libs:CodeChickenLib:1.12.2-3.2.3.358:universal'
    compileOnly 'libs:CoFHCore:1.12.2-4.6.6.1:universal'
    compileOnly 'libs:CoFHWorld:1.12.2-1.4.0.1:universal'
    compileOnly 'libs:forestry_1.12.2:5.8.2.422'
    compileOnly 'libs:ImmersiveEngineering:0.12-98'
    compileOnly 'libs:industrialforegoing:1.12.2:1.12.13-237'
    compileOnly 'libs:RedstoneFlux:1.12-2.1.1.1:universal'
    compileOnly 'libs:ThermalExpansion:1.12.2-5.5.7.1:universal'
    compileOnly 'libs:ThermalFoundation:1.12.2-2.6.7.1:universal'
}

processResources
{
    inputs.property "modversion", project.version
    inputs.property "mcversion", version
    from(sourceSets.main.resources.srcDirs)
    {
        include 'mcmod.info'
        expand 'modversion': project.version
    }

    from(sourceSets.main.resources.srcDirs)
    {
        exclude 'mcmod.info'
    }
}

jar.finalizedBy('reobfJar')

sourceSets
{
    main
    {
        output.resourcesDir = output.classesDir
    }
}