package com.luxtracon.floralis.common.world.feature;

import com.luxtracon.floralis.common.config.FloralisFeaturesConfig;
import com.luxtracon.floralis.common.registry.FloralisBlocks;

import net.minecraft.data.worldgen.features.FeatureUtils;
import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
import net.minecraft.world.level.levelgen.feature.Feature;
import net.minecraft.world.level.levelgen.feature.configurations.RandomPatchConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.SimpleBlockConfiguration;
import net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProvider;

public class FloralisConfiguredFeatures {
	private static final int TRIES_FLOWER = FloralisFeaturesConfig.TRIES_FLOWER.get();
	private static final int SPREAD_FLOWER = FloralisFeaturesConfig.SPREAD_FLOWER.get();
	private static final int TRIES_CACTUS = FloralisFeaturesConfig.TRIES_CACTUS.get();
	private static final int SPREAD_CACTUS = FloralisFeaturesConfig.SPREAD_CACTUS.get();

	public static final ConfiguredFeature<?, ?> WHITE_FLOWER = FeatureUtils.register("white_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.WHITE_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> ORANGE_FLOWER = FeatureUtils.register("orange_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.ORANGE_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> MAGENTA_FLOWER = FeatureUtils.register("magenta_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.MAGENTA_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> LIGHT_BLUE_FLOWER = FeatureUtils.register("light_blue_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.LIGHT_BLUE_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> YELLOW_FLOWER = FeatureUtils.register("yellow_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.YELLOW_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> LIME_FLOWER = FeatureUtils.register("lime_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.LIME_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> PINK_FLOWER = FeatureUtils.register("pink_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.PINK_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> GRAY_FLOWER = FeatureUtils.register("gray_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.GRAY_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> LIGHT_GRAY_FLOWER = FeatureUtils.register("light_gray_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.LIGHT_GRAY_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> CYAN_FLOWER = FeatureUtils.register("cyan_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.CYAN_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> PURPLE_FLOWER = FeatureUtils.register("purple_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.PURPLE_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> BLUE_FLOWER = FeatureUtils.register("blue_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.BLUE_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> BROWN_FLOWER = FeatureUtils.register("brown_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.BROWN_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> GREEN_FLOWER = FeatureUtils.register("green_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.GREEN_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> RED_FLOWER = FeatureUtils.register("red_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.RED_FLOWER.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> BLACK_FLOWER = FeatureUtils.register("black_flower", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_FLOWER, SPREAD_FLOWER, SPREAD_FLOWER, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.BLACK_FLOWER.get()))).onlyWhenEmpty())));

	public static final ConfiguredFeature<?, ?> WHITE_CACTUS = FeatureUtils.register("white_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.WHITE_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> ORANGE_CACTUS = FeatureUtils.register("orange_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.ORANGE_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> MAGENTA_CACTUS = FeatureUtils.register("magenta_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.MAGENTA_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> LIGHT_BLUE_CACTUS = FeatureUtils.register("light_blue_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.LIGHT_BLUE_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> YELLOW_CACTUS = FeatureUtils.register("yellow_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.YELLOW_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> LIME_CACTUS = FeatureUtils.register("lime_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.LIME_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> PINK_CACTUS = FeatureUtils.register("pink_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.PINK_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> GRAY_CACTUS = FeatureUtils.register("gray_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.GRAY_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> LIGHT_GRAY_CACTUS = FeatureUtils.register("light_gray_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.LIGHT_GRAY_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> CYAN_CACTUS = FeatureUtils.register("cyan_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.CYAN_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> PURPLE_CACTUS = FeatureUtils.register("purple_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.PURPLE_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> BLUE_CACTUS = FeatureUtils.register("blue_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.BLUE_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> BROWN_CACTUS = FeatureUtils.register("brown_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.BROWN_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> GREEN_CACTUS = FeatureUtils.register("green_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.GREEN_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> RED_CACTUS = FeatureUtils.register("red_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.RED_CACTUS.get()))).onlyWhenEmpty())));
	public static final ConfiguredFeature<?, ?> BLACK_CACTUS = FeatureUtils.register("black_cactus", Feature.FLOWER.configured(new RandomPatchConfiguration(TRIES_CACTUS, SPREAD_CACTUS, SPREAD_CACTUS, () -> Feature.SIMPLE_BLOCK.configured(new SimpleBlockConfiguration(BlockStateProvider.simple(FloralisBlocks.BLACK_CACTUS.get()))).onlyWhenEmpty())));
}
